syntax = "proto3";
package user;

message registerUserInfo {
	string name = 1;
	string password = 2;
	string realName = 3;
	string idCard = 4;
	string mobile = 5;
}

message registerResponse {
	int32 result = 1;
	int32 error = 2;
}

message userLoginParams {
	string name = 1;
	int32 timestamp = 2;
	string token = 3;
}

message getUserInfo {
	enum Info {
		int32 id = 0;
		string name = 1;
		string realName = 2;
		string idCard = 3;
		string mobile = 4;
	}

	Info result = 5;
	int32 error = 6;
}

message getRealNameDonationsParams {
	int32 id = 1;
	int32 timestamp = 2;
	string token = 3;
}

message getRealNameDonationsResponse {
	enmu Log {
		int32 time = 0;
		int32 amount = 1;
		string way = 2;
		string purpose = 3;
	}
	repeated Log result = 4;
	int32 error = 5;
}

message getAnonymousDonationsParams {
	int32 id = 0;
}

message realNameDonationsParams {
	enmu Donation {
		int32 time = 0;
		int32 amount = 1;
		string way = 2;
	}
	int32 id = 3;
	int32 timestamp = 4;
	string token = 5;
	Donation donation = 6;
}

message realNameDonationsResponse {
	string result = 1;
	int32 error = 2;
}

message realNameDonationsParams {
	enmu Donation {
		int32 time = 0;
		int32 amount = 1;
		string way = 2;
	}
	int32 id = 3;
	int32 timestamp = 4;
	string token = 5;
	Donation donation = 6;
}

message donationsResponse {
	string result = 1;
	int32 error = 2;
}

message anonymousDonateParams {
	enmu Donation {
		int32 time = 0;
		int32 amount = 1;
		string way = 2;
	}
	string mobile = 3;
	Donation donation = 4;
}

service User {
	rpc Register(registerUserInfo) returns (registerResponse);
	rpc GetUser(userLoginParams) returns (getUserInfo);
	rpc GetRealNameDonations(getRealNameDonationsParams) returns (getDonationsResponse);
	rpc GetAnonymousDonations(getAnonymousDonationsParams) returns (getDonationsResponse);
	rpc RealNameDonate(realNameDonationsParams) returns (realNameDonationsResponse);
	rpc AnonymousDonate(anonymousDonateParams) returns (donationsResponse);
}
